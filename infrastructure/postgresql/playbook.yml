---
- hosts: all
  name: Dev PostgreSQL Vagrant Ansible Local
  become: yes
  vars:
    ansible_python_interpreter: "/usr/bin/python3"

  tasks:
    - name: Install packages
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'bash', 'openssl', 'libssl-dev', 'libssl-doc', 'postgresql', 'postgresql-contrib', 'libpq-dev', 'python3-psycopg2', 'mc' ]

    - name: Set timezone to Europe/Kiev
      timezone:
        name: Europe/Kiev

    - name: Ensure the PostgreSQL service is running
      service: name=postgresql state=started enabled=yes

    - name: Deploy SSH Key
      authorized_key: user=vagrant key="{{ lookup('file', '/vagrant/pd-master-1.pub') }}" state=present

    - name: Ensure database is created
      become_user: postgres
      postgresql_db: name='vagrant'
        encoding='UTF-8'
        lc_collate='en_US.UTF-8'
        lc_ctype='en_US.UTF-8'
        template='template0'
        state=present

    - name: Ensure user has access to the database
      become_user: postgres
      postgresql_user: db='vagrant'
        name='vagrant'
        password='vagrant'
        priv=ALL
        state=present

    - name: Grant all users access to all databases from any hosts using md5 authentication.
      postgresql_pg_hba:
        dest: /etc/postgresql/10/main/pg_hba.conf
        contype: host
        users: all
        source: 0.0.0.0/0
        databases: all
        method: md5
        create: true
      notify:
        - restart postgresql

    - name: postgresql should listen on all ports
      lineinfile:
        dest=/etc/postgresql/10/main/postgresql.conf
        regexp="^listen_addresses"
        line="listen_addresses = '*'" state=present
      notify:
        - restart postgresql

  handlers:
    - name: restart postgresql
      service: name=postgresql state=restarted